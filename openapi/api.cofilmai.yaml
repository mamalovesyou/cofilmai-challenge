components:
  schemas:
    Gender:
      enum:
      - male
      - female
      title: Gender
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    SignIn:
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: SignIn
      type: object
    SignUp:
      properties:
        birthday:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          title: Birthday
        email:
          title: Email
          type: string
        gender:
          anyOf:
          - $ref: '#/components/schemas/Gender'
          - type: 'null'
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        nickname:
          anyOf:
          - type: string
          - type: 'null'
          title: Nickname
        password:
          title: Password
          type: string
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
      required:
      - email
      - password
      title: SignUp
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    JWTBearer:
      scheme: bearer
      type: http
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /:
    get:
      operationId: read_root__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Read Root
  /apis/auth/:
    get:
      operationId: auth_apis_auth__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Auth
      tags:
      - auth
  /apis/auth/sign-in:
    post:
      operationId: sign_in_apis_auth_sign_in_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignIn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Sign In
      tags:
      - auth
  /apis/auth/sign-up:
    post:
      operationId: sign_up_apis_auth_sign_up_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Sign Up
      tags:
      - auth
  /apis/users/:
    get:
      operationId: read_users_apis_users__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Read Users
      tags:
      - users
  /apis/users/me:
    get:
      operationId: read_user_me_apis_users_me_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - JWTBearer: []
      summary: Read User Me
      tags:
      - users
  /apis/users/{userId}:
    get:
      operationId: read_user_apis_users__userId__get
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          title: Userid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read User
      tags:
      - users
